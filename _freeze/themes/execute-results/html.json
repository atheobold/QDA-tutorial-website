{
  "hash": "e5179bba98edeab1b822809c2bee5748",
  "result": {
    "markdown": "---\ntitle: \"Step 3: Discovering Emergent Themes\"\npage-layout: full\nreference-location: margin\ncitation-location: margin\nbibliography: ref-1.bib\nexecute: \n  echo: false\n---\n\n\n\n\n![](images/forest.png){fig-align=center}\n\nIn the next stage of coding, often called “pattern coding” [@miles], we group\nthe descriptive codes made in the previous phase into a smaller number of\ncategories or themes. Themes or categories \"are broad units of information that\nconsist of several codes aggregated to form a common idea\" [@creswell p.194].\nThese categories can be thought of as somewhat of a meta-code.*[*For \nquantitative researchers, this process can be thought of as an analog to\ncluster-oriented or factor-oriented approaches in statistical analysis.]{.aside}\n\nCategories should span multiple codes that were previously identified. These\ncategories \"capture some recurring pattern that cuts across your data\" \n[@merriam, p. 207]. @merriam suggest this process of discovering themes from\ncodes feels somewhat like constantly transitioning one’s perspective of a\nforest, from looking at the “trees” (codes) to the “forest” (themes) and back to\nthe trees.\n\n## Discoving Themes\n\nAs I looked over my descriptive codes, I asked myself what these codes tell me\nabout the nature of the data science skills students used in their projects.\nSome themes immediately jumped out at me, whereas others took a bit of time to\nmull over. I'll walk you through my process below.\n\n### \"Obvious\" Themes\n\nThere were two themes I expected to see due to the nature of the project and \nthe requirements stipulated by the professor. For their project, students were\nexpected to (1) use an analysis strategy learned in the course and (2) create a\nvisualization to accompany any analysis and resulting discussion. Thus, I \nexpected themes of \"Data Model\" and \"Data Visualization\" to emerge from the \ndata. \n\nFrom my own experiences, I also expected that students would need to perform\nsome aspect of *data wrangling* to prepare their data for analysis. The data\nstudents used for their project were from their own research, so, although I \nknew data wrangling would play some role, I was unsure what type of tasks might\nappear in the codes.\n\n### Emergent Themes\n\nWhile I was looking over the data wrangling tasks students performed in their\nprojects, I noticed the techniques called upon specific attributes of different\n*data structures* (e.g., dataframe, vector, matrix). The implementation of some\ntasks was fairly uniform (select variable from dataframe using `$` operator),\nwhereas other tasks were highly variable. Data filtering was sometimes done with\nthe `subset()` function, which requires little explicit knowledge of data\nstructures. However, other times this filtering was carried out using the\n`[]` / extraction operator, a technique which requires an understanding of how\nextraction differs across different data structures. \n\nI also noticed while looking at the R code for the \"Data Model\" and \"Data\nVisualization\" themes that certain statements of code included some knowledge\n(or lack thereof) regarding the *R Environment*. The most obvious statement that\nevoked this theme used `with()` to temporarily attach a dataframe. There were,\nhowever, other statements that also fit into this theme, such as function\narguments being bypassed, sourcing in an external R script, loading in datasets,\nand loading in packages. \n\nWithin the themes of \"Data Model\" and \"Data Wrangling,\" I uncovered an\nadditional theme which speaks to the *efficiency* of a statement of code. The \nnotion of efficiency came to me from the \"don't repeat yourself\" principle \n[@greg], which recommends scientists modularize their code rather than\ncopying and pasting and re-use their code instead of rewriting it (p. 2). Thus,\nI considered code which adhered to these practices \"efficient\" and code which\ndid not adhere to these practices \"inefficient.\" \n\nThe final theme I discovered were statements of code whose purpose was more for\na student's *workflow* than anything else. Code comments were my first\nindication of this theme, where students used code comments to create sections\nof code or flag what was happening in a particular line / lines of code. I\nexpanded this theme to include statements of code which inspect some\ncharacteristic of an object (e.g., structure of a datafame, names of a\ndataframe, summary of a linear model). \n\n\n## Assigning Descriptive Codes to Themes\n\nFor each of the themes outlined above, the associated \"atoms\" / statements of\ncode are listed. Keep in mind one statement can apply to two themes! For \nexample, the code \n\n```linearAnterior <- lm(PADataNoOutlier$Lipid ~ PADataNoOutlier$PSUA)```\n\napplies to three themes. First and foremost, this code uses `lm()` to fit a \nlinear regression model to the data (*data model*). Second, in order to fit the \ndata model, the student uses *data wrangling* to select the variables of\ninterest(`PADataNoOutlier$Lipid`, `PADataNoOutlier$PSUA`). Finally, this code\n**does not** make use of the `data = ` argument built in to `lm()`, which\nimplies a lack of understanding of the function and thus the *R environment*. \n\n### Data Model \n\n::: {.column-margin}\n![](images/data-model.png)\n:::\n\n*Definition*: Statements of code whose purpose is to create a statistical model\nfrom data. \n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-967c1011e1819960f68a\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-967c1011e1819960f68a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\"],[\"linearAnterior &lt;- lm(PADataNoOutlier$Lipid ~ PADataNoOutlier$PSUA)\",\"plot(expAnterior)\",\"EarlyWeightAge &lt;- ddply(Early, ~Age, summarise, meanWE=mean(Weight, na.rm = T))\",\"Weight1 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 1], na.rm = TRUE)\",\"nmle &lt;- function(P, t, y, N15_NO3_O){   yhat &lt;- N15_NO3_O * (1 - exp(-P[1]*t)) - sum(dnorm(y, yhat, exp(P[2]), log = T)) }\",\"ktotEst &lt;- mle.outD$estimate[1]\",\"sigmaEst &lt;- exp(mle.outD$estimate[2])\",\"predictionD &lt;- fracDenD*N15_NO3_O_D*(1-exp(-ktotEst*predictionTimesD))\",\"likelihoods &lt;- apply(X = pMat, MARGIN = 1, FUN = nmle, t = timeD,  y = obsD, N15_NO3_O = fracDenD*(N15_NO3_O_D))\",\"mlle &lt;- -min(likelihoods)\",\"mlleIndex &lt;- which.min(likelihoods)\",\"lowerCIBound &lt;- pMat[1:mlleIndex,1][which.min(abs(mlleCI+likelihoods[1:mlleIndex]))]\",\"upperCIBound &lt;- pMat[mlleIndex:length(likelihoods),1][which.min(abs(mlleCI+likelihoods[mlleIndex:length(likelihoods)]))]\",\"CI &lt;- c(lowerCIBound, upperCIBound)\",\"lowerCIBoundkDen &lt;- lowerCIBound*fracDenD\",\"upperCIBoundkDen &lt;- upperCIBound*fracDenD\"],[\"fit a linear model, uses $ to select columns from dataframe\",\"visualizes model diagnostics for linear model\",\"data summary (mean) or variable by groups of another variable, create a new dataframe\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"user-defined function which takes multiple inputs, filters a vector using brackets, calculates values based on variables and function output\",\"pulling off named function output using $, filtering elements using brackets\",\"create new variable, pull off named function output using $, filter elements using brackets\",\"creating new object, using values of previously defined variables\",\"creating a new dataframe, applying function over rows of existing dataframe, declare additional function arguments, name all arguments  \",\"create new variable, data summary (min)\",\"create new variable, data summary (location of minimum – index)\",\"create a new variable by filtering existing dataframe using brackets and previously defined variable, selecting a column with [] and hardcoded number, filtering elements using [] and index (output from additional fitering)\",\"create a new variable by filtering existing dataframe using brackets and previously defined variable, selecting a column with [] and hardcoded number, filtering elements using [] and index (output from additional fitering)\",\"create new vector\",\"create new object based on existing variables\",\"create new object based on existing variables\"],[\"lm()\",\"diagnostic plots\",\"grouped summary statistics\",\"calculating the mean\",\"create function to estimate parameter\",\"pull out MLE estimate\",\"obtain point estimate\",\"obtain predictions\",\"obtaining likelihood estimates\",\"obtaining minimum of likelihood estimates\",\"locating which index corresponds to minimum\",\"obtaining lowerbound for confidence interval\",\"obtaining upperbound for confidence interval\",\"obtaining confidence interval\",\"adjusting confidence interval lowerbound\",\"adjusting confidence interval upperbound\"]],\"container\":\"<table class=\\\"row-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>R Code<\\/th>\\n      <th>Descriptive Code<\\/th>\\n      <th>Additional Notes<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n### Data Visualization\n\n::: {.column-margin}\n![](images/visualization.png)\n:::\n\n*Definition*: Statements of code whose purpose is to visualize relationships\nbetween variables\n\n**Sub-themes**\n\n- scatterplot\n- adding lines to plot\n- differentiated colors\n- including a legend\n- changing plotting environment\n- modifying axis labels / plot titles\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-f3df19e60323d797dc54\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f3df19e60323d797dc54\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\"],[\"with(PADataNoOutlier, plot(Lipid ~ PSUA, las = 1, col = ifelse(PADataNoOutlier$`Fork Length` &lt;  280, \\\"red\\\", \\\"black\\\")))\",\"abline(linearAnterior)\",\"with(PADataNoOutlier, plot(Lipid ~ log(PSUA), las = 1, col = ifelse(PADataNoOutlier$`Fork Length` &lt;  260, \\\"red\\\", \\\"black\\\"))) col = ifelse(PADataNoOutlier$`Fork Length` &lt;  260, \\\"red\\\", \\\"black\\\")))\",\"abline(expAnterior)\",\"plot(EarlyLengthAge$meanLE ~ EarlyLengthAge$Age, las = 1, ylab = \\\"Fork Length (mm)\\\", xlab = \\\"Age\\\")\",\"lines(EarlyLengthAge$meanLE ~ EarlyLengthAge$Age)\",\"points(MidLengthAge$meanLM ~ MidLengthAge$Age, col = \\\"red\\\")\",\"lines(MidLengthAge$meanLM ~ MidLengthAge$Age, col = \\\"red\\\")\",\"legend(15, 600, legend = c(\\\"1998-2003\\\", \\\"2006-2017\\\"), col = c(\\\"black\\\", \\\"red\\\"), lty = 1:1, cex = 0.8)\",\"plot(WeightAge$meanW ~ WeightAge$Age)\",\"plot(LengthAge$mean ~ LengthAge$Age)\"],[\"uses with() to attach dataframe, creates scatterplot, colors points based on conditional statement, rotates y-axis ticks\",\"adds linear trendline\",\"uses with() to attach dataframe, creates scatterplot, colors points based on conditional statement, rotates y-axis ticks\",\"adds linear trendline\",\"creates scatterplot, selects variables using $, specifies x- and y-axis labels, rotates y-axis ticks\",\"adds segments between lines, selects variables using $\",\"adds additional points to plot, selects variables using $, colors points red\",\"adds segments between lines, selects variables using $, colors segments red\",\"specify position for legend, declare text to display, colors to display with text, types of lines to display, thickness of lines displayed\",\"creates scatterplot, selects variables using $\",\"creates scatterplot, selects variables using $\"],[\"scatterplot, trend line, differing colors\",\"linear smoother\",\"scatterplot, trend line, differing colors\",\"linear smoother\",\"scatterplot, axis labels, tick mark orientation\",\"line segments\",\"points, colors\",\"line segments, colors\",\"legend\",\"scatterplot\",\"scatterplot\"]],\"container\":\"<table class=\\\"row-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>R Code<\\/th>\\n      <th>Descriptive Code<\\/th>\\n      <th>Additional Notes<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Data Wrangling\n\n::: {.column-margin}\n![](images/wrangle.png)\n:::\n\n*Definition:* Statements of code whose purpose is to prepare a dataset for\nanalysis and / or visualization\n\n**Sub-themes**\n\n- selecting variables\n- filtering observations\n- mutating variables\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-a836ed4632215ca348c7\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a836ed4632215ca348c7\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\"],[\"linearAnterior &lt;- lm(PADataNoOutlier$Lipid ~ PADataNoOutlier$PSUA)\",\"expAnterior &lt;- lm(PADataNoOutlier$Lipid ~ log(PADataNoOutlier$PSUA))\",\"early &lt;- subset(RPMA2Growth, StockYear &lt; 2006)\",\"mid &lt;- subset(RPMA2Growth, StockYear &lt; 2014 &amp; StockYear &gt; 2003)\",\"RPMA2GrowthSub &lt;- transform(RPMA2Growth, Age = as.integer(Age))\",\"Early &lt;- subset(RPMA2GrowthSub, StockYear &lt; 2004)\",\"Mid &lt;- subset(RPMA2GrowthSub, StockYear &lt; 2018 &amp; StockYear &gt; 2005)\",\"plot(WeightAge$meanW ~ WeightAge$Age)\",\"plot(LengthAge$mean ~ LengthAge$Age)\",\"Weight1 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 1], na.rm = TRUE)\",\"Length1 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 1], na.rm  = TRUE)\",\"Weight2 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 2], na.rm = TRUE)\",\"Length2 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 2], na.rm  = TRUE)\",\"Weight3 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 3], na.rm = TRUE)\",\"Length3 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 3], na.rm  = TRUE)\",\"Weight4 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 4], na.rm = TRUE)\",\"Length4 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 4], na.rm  = TRUE)\",\"Weight5 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 5], na.rm = TRUE)\",\"Length5 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 5], na.rm  = TRUE)\",\"Weight6 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 6], na.rm = TRUE)\",\"Length6 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 6], na.rm  = TRUE)\",\"Weight7 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 7], na.rm = TRUE)\",\"Length7 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 7], na.rm  = TRUE)\",\"Weight8 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 8], na.rm = TRUE)\",\"Length8 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 8], na.rm  = TRUE)\",\"Weight9 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 9], na.rm = TRUE)\",\"Length9 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 9], na.rm  = TRUE)\",\"gas &lt;- gas[!(substr(gas$sampleID,3,3) %in% c(\\\"b\\\",\\\"c\\\")), ]\",\"gas$days &lt;- as.numeric(gas$minutesSinceAmendment/(24*60))\",\"R &lt;- ((gas$delN2/1000)+1)*RstN\",\"gas$N15_MF &lt;- R/(1+R)\",\"gas$N15_N2_Ar &lt;- (gas$N15_MF * gas$N2Ar)*(40/28.014)\",\"timeD &lt;- (subset(gas, gas$carboy == \\\"D\\\"))$days\",\"obsD &lt;- subset(gas, gas$carboy == \\\"D\\\")$N15_N2_Ar\",\"timeD &lt;- timeD[!is.na(obsD)]\",\"obsD &lt;- obsD[!is.na(obsD)]\",\"obsD &lt;- obsD - obsD[1]\",\"N15_NO3_O_D &lt;- 40*((carboys[carboys$CarboyID == \\\"D\\\",]$EstN15NO3) + (0.7*RstN/(1 +RstN)))/(subset(gas, gas$carboy == \\\"D\\\")$Ar[1])\",\"likelihoods &lt;- apply(X = pMat, MARGIN = 1, FUN = nmle, t = timeD,  y = obsD, N15_NO3_O = fracDenD*(N15_NO3_O_D))\",\"lowerCIBound &lt;- pMat[1:mlleIndex,1][which.min(abs(mlleCI+likelihoods[1:mlleIndex]))]\",\"upperCIBound &lt;- pMat[mlleIndex:length(likelihoods),1][which.min(abs(mlleCI+likelihoods[mlleIndex:length(likelihoods)]))]\"],[\"fit a linear model, uses $ to select columns from dataframe\",\"fit a linear model, uses $ to select columns from dataframe, uses function to mutate variable\",\"filter data, relational statement, create new dataframe\",\"filter data, relational statement, joined by logical (&amp;), create new dataframe\",\"mutate existing variable to integer, create new dataframe\",\"filter data, relational statement, create new dataframe\",\"filter data, relational statement, joined by logical (&amp;), create new dataframe\",\"creates scatterplot, selects variables using $\",\"creates scatterplot, selects variables using $\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"filtering rows, using brackets, relational statement (%in%), logical (!)\",\"create new column, mutate existing column, change data type\",\"create new variable, by mutating existing column and using previously defined variable \",\"creating new column, using previously defined variable \",\"create new variable, by mutating existing variables\",\"create new object, filter rows, using subset(), relational statement (==), select column using $\",\"create a new object, filter rows, using subset(), relational statement (==), select column using $\",\"create a new object, filter elements of object using brackets, relational statement (is.na) and logical (!) \",\"create a new object, filter elements of object using brackets, relational statement (is.na) and logical (!)\",\"mutate existing object, filter elements of object using brackets\",\"filters rows (using brackets) and a relational statement (==), selects column (with $), then filters rows using subset() and a relational statement (==), selects column from filtered data and pulls out index of column with []\",\"creating a new dataframe, applying function over rows of existing dataframe, declare additional function arguments, name all arguments  \",\"create a new variable by filtering existing dataframe using brackets and previously defined variable, selecting a column with [] and hardcoded number, filtering elements using [] and index (output from additional fitering)\",\"create a new variable by filtering existing dataframe using brackets and previously defined variable, selecting a column with [] and hardcoded number, filtering elements using [] and index (output from additional fitering)\"],[\"selecting columns using $\",\"selecting columns using $\",\"filter based on values of variable\",\"filter based on values of variable and logical statement (&amp;)\",\"mutate existing column, change data type\",\"filter based on values of variable\",\"filter based on values of variable and logical statement (&amp;)\",\"selecting columns using $\",\"selecting columns using $\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"selecting columns using $, filtering rows with relational operator (==)\",\"filtering observations based on inclusion operator (%in%) and logical comparison (!)\",\"mutate variable\",\"select variable\",\"variable selection\",\"variable selection\",\"select variable, filter rows\",\"select variable, filter rows\",\"filtering observations based on logical comparison\",\"filtering observations based on logical comparison\",\"filter observations\",\"select variable, filter rows\",\"applying function across columns of matrix\",\"filtering observations based on index\",\"filtering observations based on index\"]],\"container\":\"<table class=\\\"row-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>R Code<\\/th>\\n      <th>Descriptive Code<\\/th>\\n      <th>Additional Notes<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Data Structures\n\n::: {.column-margin}\n![](images/structures.png)\n:::\n\n*Definition:* An statement of code which explicitly calls upon attributes of a\ndata structure (e.g., dataframe, matrix, vector)\n    \n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-76f64bb27b9e45585245\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-76f64bb27b9e45585245\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\"],[\"WeightChange &lt;- rep(NA, 9)\",\"legend(15, 600, legend = c(\\\"1998-2003\\\", \\\"2006-2017\\\"), col = c(\\\"black\\\", \\\"red\\\"), lty = 1:1, cex = 0.8)\",\"WeightChange\",\"Weight1 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 1], na.rm = TRUE)\",\"Weight1\",\"Length1 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 1], na.rm  = TRUE)\",\"Weight2 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 2], na.rm = TRUE)\",\"Length2 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 2], na.rm  = TRUE)\",\"Weight3 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 3], na.rm = TRUE)\",\"Length3 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 3], na.rm  = TRUE)\",\"Weight4 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 4], na.rm = TRUE)\",\"Length4 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 4], na.rm  = TRUE)\",\"Weight5 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 5], na.rm = TRUE)\",\"Length5 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 5], na.rm  = TRUE)\",\"Weight6 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 6], na.rm = TRUE)\",\"Length6 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 6], na.rm  = TRUE)\",\"Weight7 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 7], na.rm = TRUE)\",\"Length7 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 7], na.rm  = TRUE)\",\"Weight8 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 8], na.rm = TRUE)\",\"Length8 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 8], na.rm  = TRUE)\",\"Weight9 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 9], na.rm = TRUE)\",\"Length9 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 9], na.rm  = TRUE)\",\"x &lt;- data.frame(\\\"Age\\\" = 1:9, \\\"Growth\\\" = Weight1, Weight2, Weight3, Weight4, Weight5, Weight6, Weight7, Weight8, Weight9)\",\"gas &lt;- gas[!(substr(gas$sampleID,3,3) %in% c(\\\"b\\\",\\\"c\\\")), ]\",\"RstN &lt;- 0.003678\",\"R &lt;- ((gas$delN2/1000)+1)*RstN\",\"gas$N15_MF &lt;- R/(1+R)\",\"gas$N15_N2_Ar &lt;- (gas$N15_MF * gas$N2Ar)*(40/28.014)\",\"nmle &lt;- function(P, t, y, N15_NO3_O){   yhat &lt;- N15_NO3_O * (1 - exp(-P[1]*t)) - sum(dnorm(y, yhat, exp(P[2]), log = T)) }\",\"timeD &lt;- (subset(gas, gas$carboy == \\\"D\\\"))$days\",\"obsD &lt;- subset(gas, gas$carboy == \\\"D\\\")$N15_N2_Ar\",\"timeD &lt;- timeD[!is.na(obsD)]\",\"obsD &lt;- obsD[!is.na(obsD)]\",\"obsD &lt;- obsD - obsD[1]\",\"N15_NO3_O_D &lt;- 40*((carboys[carboys$CarboyID == \\\"D\\\",]$EstN15NO3) + (0.7*RstN/(1 +RstN)))/(subset(gas, gas$carboy == \\\"D\\\")$Ar[1])\",\"fracDenD = max(obsD)/N15_NO3_O_D\",\"ktotEst &lt;- mle.outD$estimate[1]\",\"kuEst &lt;- ktotEst*(1-fracDenD )\",\"kDenEst &lt;- ktotEst*fracDenD\",\"sigmaEst &lt;- exp(mle.outD$estimate[2])\",\"predictionTimesD &lt;- seq(0,max(timeD), length.out = 100)\",\"predictionD &lt;- fracDenD*N15_NO3_O_D*(1-exp(-ktotEst*predictionTimesD))\",\"legend(\\\"bottomright\\\", legend = c(\\\"Modeled\\\", \\\"Measured\\\"), lty = c(\\\"solid\\\", NA), col = c(\\\"blue\\\", \\\"black\\\"), pch = c(NA, 19))\",\"numRows &lt;- 1000\",\"kTotMin &lt;- 2\",\"kTotMax &lt;- 60\",\"pMat &lt;- matrix(data = c(seq(kTotMin, kTotMax, length.out = numRows), rep(log(sigmaEst), times = numRows)), nrow = numRows)\",\"mlle &lt;- -min(likelihoods)\",\"mlleIndex &lt;- which.min(likelihoods)\",\"mlleCI &lt;- mlle - 1.96\",\"lowerCIBound &lt;- pMat[1:mlleIndex,1][which.min(abs(mlleCI+likelihoods[1:mlleIndex]))]\",\"upperCIBound &lt;- pMat[mlleIndex:length(likelihoods),1][which.min(abs(mlleCI+likelihoods[mlleIndex:length(likelihoods)]))]\",\"CI &lt;- c(lowerCIBound, upperCIBound)\",\"lowerCIBoundkDen &lt;- lowerCIBound*fracDenD\",\"upperCIBoundkDen &lt;- upperCIBound*fracDenD\",\"plot(x = seq(kTotMin,kTotMax, length.out = numRows), y = -likelihoods, type = \\\"l\\\", xlab = \\\"ktot (per day)\\\", ylab = \\\"log(Likelihood)\\\", las = 1)\"],[\"create variable\",\"specify position for legend, declare text to display, colors to display with text, types of lines to display, thickness of lines displayed\",\"inspect dataframe\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"inspect object\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"create new dataframe, new columns, column containing data summaries\",\"filtering rows, using brackets, relational statement (%in%), logical (!)\",\"create new variable\",\"create new variable, by mutating existing column and using previously defined variable \",\"creating new column, using previously defined variable \",\"create new variable, by mutating existing variables\",\"user-defined function which takes multiple inputs, filters a vector using brackets, calculates values based on variables and function output\",\"create new object, filter rows, using subset(), relational statement (==), select column using $\",\"create a new object, filter rows, using subset(), relational statement (==), select column using $\",\"create a new object, filter elements of object using brackets, relational statement (is.na) and logical (!) \",\"create a new object, filter elements of object using brackets, relational statement (is.na) and logical (!)\",\"mutate existing object, filter elements of object using brackets\",\"filters rows (using brackets) and a relational statement (==), selects column (with $), then filters rows using subset() and a relational statement (==), selects column from filtered data and pulls out index of column with []\",\"create new variable, based on previously defined variable\",\"pulling off named function output using $, filtering elements using brackets\",\"create new variable, mutate previously defined variable\",\"create new variable, mutate previously defined variables\",\"create new variable, pull off named function output using $, filter elements using brackets\",\"creating new object, using values of previously defined variable, named arguments\",\"creating new object, using values of previously defined variables\",\"adds legend to plot, location of lengend, labels for legend, line types in legend, colors in legend, plotting characters in legend\",\"create new variable\",\"create new variable\",\"create new variable\",\"create new matrix object using previously defined variables\",\"create new variable, data summary (min)\",\"create new variable, data summary (location of minimum – index)\",\"create new variable, using existing variable\",\"create a new variable by filtering existing dataframe using brackets and previously defined variable, selecting a column with [] and hardcoded number, filtering elements using [] and index (output from additional fitering)\",\"create a new variable by filtering existing dataframe using brackets and previously defined variable, selecting a column with [] and hardcoded number, filtering elements using [] and index (output from additional fitering)\",\"create new vector\",\"create new object based on existing variables\",\"create new object based on existing variables\",\"scatterplot of a locally defined variable and one previously defined variable, specify linetype, declare axis labels, change orientation of axis ticks\"],[\"vector\",\"use of c() for legend text and colors\",\"vector\",\"vector, [] used to extract elements\",\"vector\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"vector, [] used to extract elements\",\"dataframe\",\"dataframe\",\"vector\",\"dataframe\",\"dataframe\",\"dataframe\",\"vector\",\"dataframe\",\"dataframe\",\"vector\",\"vector\",\"vector\",\"dataframe\",\"vector\",\"dataframe\",\"vector\",\"vector\",\"dataframe\",\"vector\",\"vector\",\"vector\",\"vector\",\"vector\",\"vector\",\"matrix\",\"vector\",\"vector\",\"vector\",\"matrix\",\"matrix\",\"vector\",\"vector\",\"vector\",\"vector\"]],\"container\":\"<table class=\\\"row-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>R Code<\\/th>\\n      <th>Descriptive Code<\\/th>\\n      <th>Additional Notes<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### R Environment \n\n::: {.column-margin}\n![](images/environment.png)\n:::\n\n*Definition:* A statement of code which calls on explicit aspects of the R\nenvironment\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-8954bda911b5c8f3556a\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8954bda911b5c8f3556a\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"],[\"linearAnterior &lt;- lm(PADataNoOutlier$Lipid ~ PADataNoOutlier$PSUA)\",\"with(PADataNoOutlier, plot(Lipid ~ PSUA, las = 1, col = ifelse(PADataNoOutlier$`Fork Length` &lt;  280, \\\"red\\\", \\\"black\\\")))\",\"expAnterior &lt;- lm(PADataNoOutlier$Lipid ~ log(PADataNoOutlier$PSUA))\",\"with(PADataNoOutlier, plot(Lipid ~ log(PSUA), las = 1, col = ifelse(PADataNoOutlier$`Fork Length` &lt;  260, \\\"red\\\", \\\"black\\\"))) col = ifelse(PADataNoOutlier$`Fork Length` &lt;  260, \\\"red\\\", \\\"black\\\")))\",\"library(plyr)\",\"load(\\\"***REDACTED***/gas\\\")\",\"load(\\\"***REDACTED***/carboys\\\")\",\"timeD &lt;- (subset(gas, gas$carboy == \\\"D\\\"))$days\",\"obsD &lt;- subset(gas, gas$carboy == \\\"D\\\")$N15_N2_Ar\",\"N15_NO3_O_D &lt;- 40*((carboys[carboys$CarboyID == \\\"D\\\",]$EstN15NO3) + (0.7*RstN/(1 +RstN)))/(subset(gas, gas$carboy == \\\"D\\\")$Ar[1])\"],[\"fit a linear model, uses $ to select columns from dataframe\",\"uses with() to attach dataframe, creates scatterplot, colors points based on conditional statement, rotates y-axis ticks\",\"fit a linear model, uses $ to select columns from dataframe, uses function to mutate variable\",\"uses with() to attach dataframe, creates scatterplot, colors points based on conditional statement, rotates y-axis ticks\",\"load package\",\"loading data, specifying full path to access data\",\"loading data, specifying full path to access data\",\"create new object, filter rows, using subset(), relational statement (==), select column using $\",\"create a new object, filter rows, using subset(), relational statement (==), select column using $\",\"filters rows (using brackets) and a relational statement (==), selects column (with $), then filters rows using subset() and a relational statement (==), selects column from filtered data and pulls out index of column with []\"],[\"doesn't use data = argument\",\"with()\",\"doesn't use data = argument\",\"with()\",\"load package\",\"full path to data\",\"full path to data\",\"carboy variable can called on without referencing gas dataframe\",\"carboy variable can called on without referencing gas dataframe\",\"carboy variable can called on without referencing gas dataframe\"]],\"container\":\"<table class=\\\"row-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>R Code<\\/th>\\n      <th>Descriptive Code<\\/th>\\n      <th>Additional Notes<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Efficiency / Inefficiency\n\n::: {.column-margin}\n![](images/efficient.png)\n:::\n\n*Definition:* A statement of code which adheres to the \"don't repeat yourself\"\nprinciple\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-4a8bb87ebabb4aabd3cb\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4a8bb87ebabb4aabd3cb\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\"],[\"EarlyWeightAge &lt;- ddply(Early, ~Age, summarise, meanWE=mean(Weight, na.rm = T))\",\"EarlyLengthAge &lt;- ddply(Early, ~Age, summarise, meanLE = mean(ForkLength, na.rm = T))\",\"MidLengthAge &lt;- ddply(Mid, ~Age, summarise, meanLM = mean(ForkLength, na.rm = T))\",\"WeightChange &lt;- rep(NA, 9)\",\"library(plyr)\",\"Weight1 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 1], na.rm = TRUE)\",\"Length1 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 1], na.rm  = TRUE)\",\"Weight2 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 2], na.rm = TRUE)\",\"Length2 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 2], na.rm  = TRUE)\",\"Weight3 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 3], na.rm = TRUE)\",\"Length3 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 3], na.rm  = TRUE)\",\"Weight4 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 4], na.rm = TRUE)\",\"Length4 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 4], na.rm  = TRUE)\",\"Weight5 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 5], na.rm = TRUE)\",\"Length5 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 5], na.rm  = TRUE)\",\"Weight6 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 6], na.rm = TRUE)\",\"Length6 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 6], na.rm  = TRUE)\",\"Weight7 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 7], na.rm = TRUE)\",\"Length7 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 7], na.rm  = TRUE)\",\"Weight8 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 8], na.rm = TRUE)\",\"Length8 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 8], na.rm  = TRUE)\",\"Weight9 &lt;- mean(RPMA2GrowthSub$Weight[RPMA2GrowthSub$Age == 9], na.rm = TRUE)\",\"Length9 &lt;- mean(RPMA2GrowthSub$ForkLength[RPMA2GrowthSub$Age == 9], na.rm  = TRUE)\",\"source(\\\"./Gas_Functions.R\\\")\",\"likelihoods &lt;- apply(X = pMat, MARGIN = 1, FUN = nmle, t = timeD,  y = obsD, N15_NO3_O = fracDenD*(N15_NO3_O_D))\"],[\"data summary (mean) or variable by groups of another variable, create a new dataframe\",\"data summary (mean) or variable by groups of another variable, create a new dataframe\",\"data summary (mean) or variable by groups of another variable, create a new dataframe\",\"create variable\",\"load package\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"select column with $, filter rows using [] and relational statement (==), calculate data summary\",\"loading functions written in another R script\",\"creating a new dataframe, applying function over rows of existing dataframe, declare additional function arguments, name all arguments  \"],[\"repeated operations on same groups\",\"repeated operations on same groups\",\"repeated operations on same groups\",\"packages loaded after use\",\"package already loaded previously\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"repeated operation\",\"reusing code instead of rewriting it\",\"repeated operations on multiple rows\"]],\"container\":\"<table class=\\\"row-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>R Code<\\/th>\\n      <th>Descriptive Code<\\/th>\\n      <th>Additional Notes<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Workflow\n\n::: {.column-margin}\n![](images/workflow.png)\n:::\n\n*Definition:* A statement of code which facilitates a smooth execution of a\nworking process\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-257d29ff9577cc71fc85\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-257d29ff9577cc71fc85\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\"],[\"str(PADataNoOutlier)\",\"str(PADataNoOutlierMultMeasure)\",\"names(RPMA2Growth)\",\"#upper anterior measurement Linear model\",\"summary(linearAnterior)\",\"linearAnterior\",\"#Exponential function\",\"summary (expAnterior)\",\"expAnterior\",\"#Tanner's code/help\",\"source(\\\"./Gas_Functions.R\\\")\",\"# Load data ####\",\"# Calculate molar fraction of N15-N2\",\"# Calculate concentration of N15-N14 N2 relative to Argon\",\"#mol N15-N2 per mol Ar\",\"# Function to calculate likelihood of parameters given data ####\",\"#### Carboy D ####\",\"# Make vectors for time and N15-N2 observations\",\"# Subtract off N15-N2 initially present in sample and set tracer N15-N2 to 0 at t=0\",\"# Estimate Initial concentration of N15-NO3 relative to Ar\",\"# Estimate fraction of labeled nitrate that gets denitrified\",\"# Search for best parameters\",\"#per day\",\"# Plot model with data\",\"# Calculate confidence interval\",\"# Make matrix of parameter combinations\",\"print(CI)\",\"# Plot likelihoods with confidence intervals\"],[\"inspect data\",\"inspect data\",\"inspect data\",\"code comment\",\"views summary of lm object\",\"inspects lm object\",\"code comment\",\"views summary of lm object\",\"inspects lm object\",\"comment on where the code was acquired\",\"loading functions written in another R script\",\"code comment\",\"comment on code below\",\"comment on code below\",\"comment on units\",\"comment on code below\",\"comment on new section of code\",\"comment on code below\",\"comment on action taken in code below\",\"comment on action taken in code below\",\"comment on action of code below\",\"comment on action for code below\",\"comment on units\",\"comment on code below\",\"comment on code below\",\"comment on action taken in code below\",\"inspect object\",\"comment on what code below does\"],[\"inspect object\",\"inspect object\",\"inspect object\",\"comment on actions taken in code below\",\"inspect object\",\"inspect object\",\"code comment on change in model\",\"inspect object\",\"inspect object\",\"code comment on where code came from\",\"saving common functions in separate file\",\"descriptive comment on process taken in code below\",\"descriptive comment on actions taken in code below\",\"descriptive comment on actions taken in code below\",\"code comment on units of calculation above\",\"descriptive comment on actions taken in code below\",\"code comment marking new section of code\",\"descriptive comment on actions taken in code below\",\"descriptive comment on action taken in code below\",\"descriptive comment on action taken in code below\",\"descriptive comment on action taken in code below\",\"descriptive comment on action taken in code below\",\"code comment on units of calculation below\",\"descriptive comment on action taken in code below\",\"descriptive comment on process in code below\",\"descriptive comment on action taken in code below\",\"inspect object\",\"descriptive comment on process taken in code below\"]],\"container\":\"<table class=\\\"row-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>R Code<\\/th>\\n      <th>Descriptive Code<\\/th>\\n      <th>Additional Notes<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.22/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.11.3/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.11.3/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.11.3/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}